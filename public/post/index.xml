<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Riinu&#39;s scripting diary</title>
    <link>https://riinu.me/post/</link>
    <description>Recent content in Posts on Riinu&#39;s scripting diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Feb 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://riinu.me/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>R: filtering with NA values</title>
      <link>https://riinu.me/2020/02/r-filtering-with-na-values/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2020/02/r-filtering-with-na-values/</guid>
      <description>


&lt;p&gt;NA - Not Available/Not applicable is R’s way of denoting empty or missing values. When doing comparisons - such as equal to, greater than, etc. - extra care and thought needs to go into how missing values (NAs) are handled.
More explanations about this can be found in the Chapter 2: R basics of our book that is freely available at the &lt;a href=&#34;https://healthyr.surgicalinformatics.org/&#34;&gt;HealthyR website&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This post lists a couple of different ways of keeping or discarding rows based on how important the variables with missing values are to you.&lt;/p&gt;
&lt;p&gt;For example, I want to keep rows that have a value for &lt;code&gt;important_a&lt;/code&gt; and/or &lt;code&gt;important_b&lt;/code&gt; (so rows 1, 3, 4).
I don’t care whether &lt;code&gt;whatever_c&lt;/code&gt; is empty or not, but I do want to keep it.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

mydata  = tibble(important_a = c(&amp;quot;Value&amp;quot;, NA, &amp;quot;Value&amp;quot;, NA, NA),
                 important_b = c(NA, NA, &amp;quot;Value&amp;quot;, &amp;quot;Value&amp;quot;, NA),
                 whatever_c  = c(NA, &amp;quot;Value&amp;quot;, NA, NA, NA))

mydata %&amp;gt;% knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;important_a&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;important_b&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;whatever_c&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Value&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Value&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Value&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Value&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Functions for missing values that are very useful, but don’t do what I want are:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;This keeps complete cases based on all columns:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mydata %&amp;gt;% 
  drop_na()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 0 x 3
## # … with 3 variables: important_a &amp;lt;chr&amp;gt;, important_b &amp;lt;chr&amp;gt;, whatever_c &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(Returns 0 as we don’t have rows where all 3 columns have a value).&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;This keeps complete cases based on specified columns:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mydata %&amp;gt;% 
  drop_na(important_a, important_b)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 3
##   important_a important_b whatever_c
##   &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;     
## 1 Value       Value       &amp;lt;NA&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This only keeps the row where both a and b have a value.&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;This keeps rows that have a value in any column:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mydata %&amp;gt;% 
  filter_all(any_vars(! is.na(.)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 3
##   important_a important_b whatever_c
##   &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;     
## 1 Value       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;      
## 2 &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;        Value     
## 3 Value       Value       &amp;lt;NA&amp;gt;      
## 4 &amp;lt;NA&amp;gt;        Value       &amp;lt;NA&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The third example is better achieved using the janitor package:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mydata %&amp;gt;% 
  janitor::remove_empty()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 3
##   important_a important_b whatever_c
##   &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;     
## 1 Value       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;      
## 2 &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;        Value     
## 3 Value       Value       &amp;lt;NA&amp;gt;      
## 4 &amp;lt;NA&amp;gt;        Value       &amp;lt;NA&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, (3) is pretty close, but still, I’m not interested in row 2 - where both a and b are empty but c has a value (which is why it’s kept).&lt;/p&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Simple solution&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A quick solution is to use &lt;code&gt;! is.na()&lt;/code&gt; for each variable inside a &lt;code&gt;filter()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mydata %&amp;gt;% 
  filter(! is.na(important_a) | ! is.na(important_b))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   important_a important_b whatever_c
##   &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;     
## 1 Value       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;      
## 2 Value       Value       &amp;lt;NA&amp;gt;      
## 3 &amp;lt;NA&amp;gt;        Value       &amp;lt;NA&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And this is definitely what I do when I only have a couple of these variables. But if you have tens, then the filtering logic becomes horrendously long and it’s easy to miss one out/make a mistake.&lt;/p&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Powerful solution:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A scalable solution is to use &lt;code&gt;filter_at()&lt;/code&gt; with &lt;code&gt;vars()&lt;/code&gt; with a select helper (e.g., &lt;code&gt;starts with()&lt;/code&gt;), and then the &lt;code&gt;any_vars(! is.na(.))&lt;/code&gt; that was introduced in (3).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mydata %&amp;gt;% 
  filter_at(vars(starts_with(&amp;quot;important_&amp;quot;)), any_vars(! is.na(.)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   important_a important_b whatever_c
##   &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;     
## 1 Value       &amp;lt;NA&amp;gt;        &amp;lt;NA&amp;gt;      
## 2 Value       Value       &amp;lt;NA&amp;gt;      
## 3 &amp;lt;NA&amp;gt;        Value       &amp;lt;NA&amp;gt;&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>RStudio Server LAN party: Laptop&#43;Router&#43;Docker to serve RStudio offline</title>
      <link>https://riinu.me/2019/11/rstudio-server-lan-party/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2019/11/rstudio-server-lan-party/</guid>
      <description>


&lt;blockquote&gt;
&lt;p&gt;TLDR: You can teach R on people’s own laptops without having them install anything or require an internet connection.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://riinu.me/img/healthyr_bus.png&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Members of the Surgical Informatics team in Ghana, 2019. More information: surgicalinformatics.org&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Running R programming courses on people’s own laptops is a pain, especially as we use a lot of very useful extensions that actually make learning and using R much easier and more fun. But long installation instructions can be very off-putting for complete beginners, and &lt;strong&gt;people can be discouraged to learn programming if installation hurdles invoke their imposter syndrome&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We almost always run our courses in places with a good internet connection (it does not have to be super fast or flawless), so we get our students all set up on RStudio Server (hosted by us) or &lt;a href=&#34;https://rstudio.cloud&#34; class=&#34;uri&#34;&gt;https://rstudio.cloud&lt;/a&gt; (a free service provided by RStudio!).
You connect to either of these options using a web browser, and even very old computers can handle this. That’s because the actual computations happen on the server and not on the student’s computer. So the computer just serves as a window to the training instance used.&lt;/p&gt;
&lt;p&gt;Now, these options work really well as long as you have a stable internet connection. But for teaching R offline and on people’s own laptops, you either have to:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;make sure everyone installs everything correctly before they attend the course&lt;/li&gt;
&lt;li&gt;Download all the software and extensions, put them on USB sticks and try to install them together at the start&lt;/li&gt;
&lt;li&gt;start serving RStudio from a your computer using Local Area Network (LAN) created by a router&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, we already discussed why the first option is problematic (gatekeeper for complete beginners). The second option - installing everything at the start together - means that you start the course with the most boring part. &lt;strong&gt;And since everyone’s computers are different&lt;/strong&gt; (both by operating systems as well as different versions of the operating systems), &lt;strong&gt;this can take quite a while to sort&lt;/strong&gt;. Therefore, queue in option c) - an RStudio Server LAN party.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;requirements&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;A computer with more than 4GB of RAM.&lt;/strong&gt; macOS alone uses around 2-3GB just to keep going, and running the RStudio Server docker container was using another 3-4 GB, so you’ll definitely need more than 4GB in total.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A network router.&lt;/strong&gt; For a small number of participants, the same one you already have at home will work. Had to specify “network” here, as apparently, even my Google search for “router” suggests the power tool before network routers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker - free software&lt;/strong&gt;, dead easy to install on macOS (search the internet for “download Docker”). Looks like installation on the Windows Home operating system might be trickier. If you are a Windows Home user who is using Docker, please do post a link to your favourite instructions in the comments below.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Internet connection for setting up&lt;/strong&gt; - to download RStudio’s docker image and install your extra packages.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://riinu.me/img/docker_lan.png&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;My MacBook Pro serving RStudio to 10 other computers in Ghana, November 2019.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;set-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Set-up&lt;/h2&gt;
&lt;p&gt;Running RStudio using Docker is so simple you won’t believe me. It honestly is just a single-liner to be entered into your Terminal (Command Prompt on Windows):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -d -p 8787:8787 -e ROOT=TRUE -e USER=user -e PASSWORD=password rstudio/verse &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will automatically download a Docker image put together by RStudio. The one called &lt;code&gt;verse&lt;/code&gt; includes all the tidyverse packages as well as publishing-related ones (R Markdown, Shiny, etc.). You can find a list of the difference ones here: &lt;a href=&#34;https://github.com/rocker-org/rocker&#34; class=&#34;uri&#34;&gt;https://github.com/rocker-org/rocker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then open a browser and go to &lt;code&gt;localhost:8787&lt;/code&gt; and you should be greeted with an RStudio Server login! (Localhost only works on a Mac or Linux, if using Windows, take a note of your IP address and use that instead of &lt;code&gt;localhost&lt;/code&gt;.) More information and instructions can be found here: &lt;a href=&#34;https://github.com/rocker-org/rocker/wiki/Using-the-RStudio-image&#34; class=&#34;uri&#34;&gt;https://github.com/rocker-org/rocker/wiki/Using-the-RStudio-image&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tip: RStudio suggests port 8787, which is what I used for consistency, but if you set it up on 80 you can omit the :80 as that’s the default anyway. So you can just go to &lt;code&gt;localhost&lt;/code&gt; (or something like &lt;code&gt;127.0.0.0&lt;/code&gt; if using Windows).&lt;/p&gt;
&lt;p&gt;For those of you who have never seen or used RStudio Server, this is what it looks like:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://riinu.me/img/rstudio_server.png&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Rstudio Server is almost identical to RStudio Desktop. Main difference is the “Upload” button in the Files pane. This one is running in a Docker container, served at port 8787, and accessed using Safari (but any web browser will work).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The Docker single-liner above will create a single user with sudo rights (since I’ve included &lt;code&gt;-e ROOT=TRUE&lt;/code&gt;). After logging into the instance, you can then add other users and copy the course materials to everyone using these scripts: &lt;a href=&#34;https://github.com/einarpius/create_rstudio_users&#34; class=&#34;uri&#34;&gt;https://github.com/einarpius/create_rstudio_users&lt;/a&gt; Note that the instance is running Debian, so you’ll need very basic familiarity with managing file permissions on the command line. For example, you’ll need to make the scripts executable with &lt;code&gt;chmod 700 create_users.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then connect to the same router you’ll be using for your LAN party, go to router settings and assign yourself a fixed IP address, e.g., 168.192.1.78. Once other people connect to the network created by this router (either by WiFi or cable), they need to type &lt;code&gt;168.192.1.78:8787&lt;/code&gt; into any browser and can just start using RStudio. This will work as long as your computer is running Docker and you are all connected to the same router.&lt;/p&gt;
&lt;p&gt;I had 10 people connected to my laptop and, most of the time, the strain on my CPU was negligible - around 10-20%. That’s because it was a course for complete beginners and they were mostly reading the instructions (included in the training Notebooks they were running R code in). So they weren’t actually hitting Run at the same time, and the tasks weren’t computationally heavy. When we did ask everyone to hit the “Knit to PDF” button all at the same time, it got a bit slower and my CPU was apparently working at 200%. But nothing crashed and everyone got their PDFs made.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;why-are-you-calling-it-a-lan-party&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why are you calling it a LAN party?&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://riinu.me/img/lanparty2010.jpg&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;My friends and I having a LAN party in Estonia, 2010. We would mostly play StarCraft or Civilization, or as pictured here - racing games to wind down at the end.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;LAN stands for Local Area Network and in most cases means “devices connected to the same WiFi*”. You’ve probably used LANs lots in your life without even realising. One common example is printers: you know when a printer asks you to connect to the same network to be able to print your files? This usually means your computer and the printer will be in a LAN. If your printed accepted files via any internet connection, rather than just the same local network, then people around the world could submit stuff for your printer. Furthermore, if you have any smart devices in your home, they’ll be having a constant LAN party with each other.&lt;/p&gt;
&lt;p&gt;The term “LAN party” means people coming together to play multiplayer computer games - as it will allow people to play in the same “world”, to either build things together or fight with each other. Good internet access has made LAN parties practically obsolete - people and their computers no longer have to physically be in the same location to play multiplayer games together. I use the term very loosely to refer to anything fun happening on the same network. And being able to use RStudio is definitely a party in my books anyway.&lt;/p&gt;
&lt;p&gt;But it is for security reasons (e.g., the printer example), or sharing resources in places without excellent internet connection where LAN parties are still very much relevant.&lt;/p&gt;
&lt;p&gt;* Overall, most existing LANs operate via Ethernet cables (or “internet cables” as most people, including myself refer to them). WiFi LAN or WLAN is a type of LAN. Have a look at your home router, it will probably have different lights for “internet” and “WLAN”/“wireless”. A LAN can also be connected to the internet - if the router itself is connected to the internet. That’s the main purpose of a router - to take the internet coming into your house via a single Ethernet cable, and share it with all your other devices. A LAN is usually just a nice side-effect of that.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;docker-containers-images&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Docker, containers, images&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Docker image &lt;/strong&gt; - a file bundling an operating system + programs and files
&lt;strong&gt;Docker container&lt;/strong&gt; - a running image (it may be paused or stopped)&lt;/p&gt;
&lt;p&gt;List of all your containers: &lt;code&gt;docker ps -a&lt;/code&gt; (just &lt;code&gt;docker ps&lt;/code&gt; will list running containers, so the ones not stopped or paused)&lt;/p&gt;
&lt;p&gt;List your images: &lt;code&gt;docker images&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Run a container using an image:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -d -p 8787:8787 -e ROOT=TRUE -e USER=user -e PASSWORD=password rstudio/verse &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When you run &lt;code&gt;rstudio/verse&lt;/code&gt; for the first time it will be downloaded into your images. The next time it will be taken directly from there, rather than downloaded. So you’ll only need internet access once.&lt;/p&gt;
&lt;p&gt;Stop an active container: &lt;code&gt;docker stop container-name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Start it up again: &lt;code&gt;docker start container-name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Save a container as an image (for versioning or passing on to other people):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker commit container-name pository:tag&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example: &lt;code&gt;docker commit rstudio-server rstudio/riinu:test1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Rename container (by default it will get a random label, I’d change it to rstudio-server):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker rename happy_hippo rstudio-server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can then start your container with: &lt;code&gt;docker start rstudio-server&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>New intuitive ways for reshaping data in R: long live pivot_longer() and pivot_wider()</title>
      <link>https://riinu.me/2019/04/new-intuitive-ways-to-reshape-data-in-r/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2019/04/new-intuitive-ways-to-reshape-data-in-r/</guid>
      <description>


&lt;p&gt;TLDR: there are two new and very intuitive R functions for reshaping data: see &lt;a href=&#34;#examples&#34;&gt;Examples&lt;/a&gt; of &lt;code&gt;pivot_longer()&lt;/code&gt; and &lt;code&gt;pivot_wider()&lt;/code&gt; below. At the time of writing, these new functions are extremely fresh and only exist in the development version on GitHub (see &lt;a href=&#34;#installation&#34;&gt;Installation&lt;/a&gt;), we should probably wait for the tidyverse team to officially release them (in CRAN) before putting them into day-to-day use.&lt;/p&gt;
&lt;p&gt;Exciting!&lt;/p&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;The juxtapose of &lt;em&gt;data collection&lt;/em&gt; vs &lt;em&gt;data analysis&lt;/em&gt;: data that was very easy to collect, is probably very hard to analyse, and vice versa. For example, if data is collected/written down whichever format was most convenient at the time of data collection, it is probably not recorded in a regularly shaped table, with various bits of information in different parts of the document. And even if data is collected into a table, it is often intuitive (for data entry) to include information about the same variable in different columns. For example, look at this example data I just made up:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

candydata_raw = read_csv(&amp;quot;2019-04-07_candy_preference_data.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;candy_type&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;likes age: 5&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;likes age: 10&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;likes age: 15&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;gets age: 5&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;gets age: 10&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;gets age: 15&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For each candy type, there are 8 columns with values. But actually, these 8 columns capture a combination of 3 variables: &lt;code&gt;age&lt;/code&gt;, &lt;code&gt;likes&lt;/code&gt; and &lt;code&gt;eats&lt;/code&gt;. This is known as the wide format, and it is a convenient way to either note down or even present values. It is human-readable. For effective data analysis, however, we need data to be in the tidy data format, where each column is a single variable, and each row a single observation (&lt;a href=&#34;https://www.jstatsoft.org/article/view/v059i10&#34; class=&#34;uri&#34;&gt;https://www.jstatsoft.org/article/view/v059i10&lt;/a&gt;). It needs to be less human-readable and more computer-friendly.&lt;/p&gt;
&lt;p&gt;Some of you may remember now retired &lt;code&gt;reshape2::melt()&lt;/code&gt; or &lt;code&gt;reshape2::dcast()&lt;/code&gt;, and many of you (inclduing myself!) have struggled remebering the arguments for &lt;code&gt;tidyr::gather()&lt;/code&gt; and &lt;code&gt;tidyr::spread()&lt;/code&gt;. Based on extensive community feedback, the tidyverse team have reinveted these functions using both more intuitive names, as well as clearer syntax (arguments):&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Thanks to all 2649 (!!!) people who completed my survey about table shapes! I&amp;#39;ve done analysed the data at &lt;a href=&#34;https://t.co/hyu1o91xRm&#34;&gt;https://t.co/hyu1o91xRm&lt;/a&gt; and the new functions will be called pivot_longer() and pivot_wider() &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt;&lt;/p&gt;&amp;mdash; Hadley Wickham (@hadleywickham) &lt;a href=&#34;https://twitter.com/hadleywickham/status/1109816130774986753?ref_src=twsrc%5Etfw&#34;&gt;March 24, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/div&gt;
&lt;div id=&#34;installation20190407&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Installation&lt;/h1&gt;
&lt;p&gt;These functions were added just a month ago, so these functions are not yet included in the standard version of &lt;code&gt;tidyr&lt;/code&gt; that comes with &lt;code&gt;install.packages(&#34;tidyverse&#34;)&lt;/code&gt; or even &lt;code&gt;update.packages()&lt;/code&gt; (the current version of &lt;code&gt;tidyr&lt;/code&gt; on CRAN is 0.8.3). To play with the bleeding edge versions of R packages, run &lt;code&gt;install.packages(&#34;devtools&#34;)&lt;/code&gt; and then &lt;code&gt;devtools::install_github(&#34;tidyverse/tidyr&#34;)&lt;/code&gt;. If you are a Mac user and it asks you “Do you want to install from sources the package which needs compilation?”, say Yes.&lt;/p&gt;
&lt;p&gt;You might need to Restart R (Session menu at the top) and load &lt;code&gt;library(tidyverse)&lt;/code&gt; again. You can check whether you now have these functions installed by typing in &lt;code&gt;pivot_longer&lt;/code&gt; and pressing F1 - if a relevant Help tab pops open you got it.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;examples20190407&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Examples&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;candydata_longer = candydata_raw %&amp;gt;% 
  pivot_longer(contains(&amp;quot;age&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;candy_type&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;name&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;likes age: 5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;likes age: 10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;likes age: 15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;gets age: 5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;gets age: 10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;gets age: 15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;likes age: 5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;likes age: 10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;likes age: 15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;gets age: 5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;gets age: 10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;gets age: 15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now, that’s already a lot better, but we still need to split the &lt;code&gt;name&lt;/code&gt; column into the two different variables it really includes. “name” is what &lt;code&gt;pivot_longer()&lt;/code&gt; calls this new column by default. Remember, each column is a single variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;candydata_longer = candydata_raw %&amp;gt;% 
  pivot_longer(contains(&amp;quot;age&amp;quot;)) %&amp;gt;% 
  separate(name, into = c(&amp;quot;questions&amp;quot;, NA, &amp;quot;age&amp;quot;), convert = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;candy_type&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;questions&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;age&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;likes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;likes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;likes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;gets&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;gets&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;gets&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;likes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;likes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;likes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;gets&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;gets&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;gets&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;And &lt;code&gt;pivot_wider()&lt;/code&gt; can be used to do the reverse:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;candydata = candydata_longer %&amp;gt;% 
  pivot_wider(names_from = questions, values_from = value)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;candy_type&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;age&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;likes&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;gets&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Chocolate&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lollipop&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It is important to spell out the arguments here (&lt;code&gt;names_from =&lt;/code&gt;, &lt;code&gt;values_frame =&lt;/code&gt;) since they are not the second and third arguments of &lt;code&gt;pivot_wider()&lt;/code&gt; (like they were in &lt;code&gt;spread()&lt;/code&gt;). Investigate the &lt;code&gt;pivot_wider+F1&lt;/code&gt; Help tab for more information.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;wrap-up-and-notes&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Wrap-up and notes&lt;/h1&gt;
&lt;p&gt;Now these are datasets we can work with: each column is a variable, each row is an observation.&lt;/p&gt;
&lt;p&gt;Do not start replacing working and tested instances of &lt;code&gt;gather()&lt;/code&gt; or &lt;code&gt;spread()&lt;/code&gt; in your existing R code with these new functions. That is neither efficient nor necessary - &lt;code&gt;gather()&lt;/code&gt; and &lt;code&gt;spread()&lt;/code&gt; will remain in &lt;code&gt;tidyr&lt;/code&gt; to make sure people’s scripts don’t suddenly stop working. Meaning: &lt;code&gt;tidyr&lt;/code&gt; is backward compatible. But after these functions are officially released, I will start using them in all new scripts I write.&lt;/p&gt;
&lt;p&gt;I made the original messy columns still relatively nice to work with - no typos and reasonable delimiters. Usually, the labels are much worse and need the help of &lt;code&gt;janitor::clean_names()&lt;/code&gt;, &lt;code&gt;stringr::str_replace()&lt;/code&gt;, and multiple iterations of &lt;code&gt;tidyr::separate()&lt;/code&gt; to arrive at a nice tidy tibble/data frame.&lt;/p&gt;
&lt;div id=&#34;tidyrseparate-tips&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;tidyr::separate() tips:&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;into = c(&#34;var1&#34;, NA, &#34;var2&#34;)&lt;/code&gt; - now this is an amazing trick I only came across this week! This is a convenient way to drop useless (new) columns. Previously, I would have achieved the same result with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;... %&amp;gt;% 
    separate(..., into = c(&amp;quot;var1&amp;quot;, &amp;quot;drop&amp;quot;, &amp;quot;var2&amp;quot;)) %&amp;gt;% 
    select(-drop) %&amp;gt;% 
    ...
    &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;convert = TRUE&lt;/code&gt;: by default, &lt;code&gt;separate()&lt;/code&gt; creates new variables that are also just “characters”. This means our age would have been a chacter vector of, e.g., “5”, “10”, rather than 5, 10, and R wouldn’t have known how to do arithmetic on it. In this example, &lt;code&gt;convert = TRUE&lt;/code&gt; is equivalent to &lt;code&gt;mutate(age = as.numeric(age))&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Good luck!&lt;/p&gt;
&lt;p&gt;P.S. This is one of the coolest Tweets I’ve ever seen:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;On this auspicious day, in honor of tidyr, I am pleased to re-introduce you to pivot_longer and pivot_wider. &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://t.co/hj3zqYYbVf&#34;&gt;pic.twitter.com/hj3zqYYbVf&lt;/a&gt;&lt;/p&gt;&amp;mdash; Ian Lyttle (@ijlyttle) &lt;a href=&#34;https://twitter.com/ijlyttle/status/1112675046663876608?ref_src=twsrc%5Etfw&#34;&gt;April 1, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Global map of country names</title>
      <link>https://riinu.me/2018/09/global-map-of-country-names/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2018/09/global-map-of-country-names/</guid>
      <description>


&lt;p&gt;This post demonstrates the use of two very cool R packages - &lt;code&gt;ggrepel&lt;/code&gt; and &lt;code&gt;patchwork&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ggrepel&lt;/code&gt; deals with overlapping text labels (Code#1 at the bottom of this post):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://riinu.me/post/2018-09-16-global-map-of-country-names-and-patchwork_files/figure-html/code1-1.png&#34; width=&#34;384&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;patchwork&lt;/code&gt; is a very convenient new package for combining multiple different plots together (i.e. what we usually to use &lt;code&gt;grid&lt;/code&gt; and &lt;code&gt;gridExtra&lt;/code&gt; for).&lt;/p&gt;
&lt;p&gt;More info:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/slowkow/ggrepel&#34; class=&#34;uri&#34;&gt;https://github.com/slowkow/ggrepel&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/thomasp85/patchwork&#34; class=&#34;uri&#34;&gt;https://github.com/thomasp85/patchwork&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To really demonstrate the power of them, let’s make a global map of country names using &lt;code&gt;ggrepel&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(ggrepel)
library(patchwork)

# data from https://worldmap.harvard.edu/data/geonode:country_centroids_az8

orig_data = read_csv(&amp;quot;country_centroids_az8.csv&amp;quot;)


centroidsdata = orig_data %&amp;gt;% 
  select(country = admin, continent, lat = Latitude, lon = Longitude) %&amp;gt;% 
  filter(continent != &amp;quot;Seven seas (open ocean)&amp;quot; &amp;amp; continent != &amp;quot;Antarctica&amp;quot;) %&amp;gt;% 
  mutate(continent  = fct_collapse(continent, &amp;quot;Americas&amp;quot; = c(&amp;quot;North America&amp;quot;, &amp;quot;South America&amp;quot;)))

head(centroidsdata)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 4
##   country     continent   lat   lon
##   &amp;lt;chr&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 Aruba       Americas   12.5 -70.0
## 2 Afghanistan Asia       33.8  66.0
## 3 Angola      Africa    -12.3  17.5
## 4 Anguilla    Americas   18.2 -63.1
## 5 Albania     Europe     41.1  20.0
## 6 Aland       Europe     60.2  20.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot1 = centroidsdata %&amp;gt;% 
  ggplot(aes(x = lon, y = lat, label = country, colour = continent)) +
  geom_text_repel(segment.alpha = 0)   +
  theme_void() +
  scale_color_brewer(palette = &amp;quot;Dark2&amp;quot;)

plot1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://riinu.me/post/2018-09-16-global-map-of-country-names-and-patchwork_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;2304&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now this is very good already with hardly any overlapping labels and the world is pretty recognisable. And really, you can make this plot with just 2 lines of code:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(centroidsdata, aes(x = lon, y = lat, label = country)) +
geom_text_repel(segment.alpha = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So what these two lines make is already very amazing.&lt;/p&gt;
&lt;p&gt;But I feel like Europe is a little bit misshapen and that the Caribbean and Africa are too close together. So I divided the world into regions (in this case same as continents except Russia is it’s own region - it’s just so big). Then wrote two functions that asked &lt;code&gt;ggrepel&lt;/code&gt; to plot each region separately and use &lt;code&gt;patchwork&lt;/code&gt; to patch each region together:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;centroidsdata = centroidsdata %&amp;gt;% 
  mutate(region = continent %&amp;gt;% fct_expand(&amp;quot;Russia&amp;quot;)) %&amp;gt;% 
  mutate(region = replace(region, country == &amp;quot;Russia&amp;quot;, &amp;quot;Russia&amp;quot;))

mapbounds = centroidsdata %&amp;gt;% 
  group_by(region) %&amp;gt;% 
  summarise(xmin = min(lon), xmax = max(lon), ymin = min(lat), ymax = max(lat))


create_labelmap = function(mydata, mycontinent, myforce = 1, mycolour = &amp;quot;black&amp;quot;){
  
  mymapbounds = mapbounds %&amp;gt;% 
    filter(region == mycontinent)
  
  mydata %&amp;gt;% 
    filter(region == mycontinent) %&amp;gt;% 
    ggplot(aes(x = lon, y = lat, label = country)) +
    geom_text_repel(segment.alpha = 0, force = myforce, colour = mycolour)   +
    theme_void() +
    theme(legend.position = &amp;quot;none&amp;quot;) +
    scale_y_continuous(limits = c(mymapbounds$ymin, mymapbounds$ymax)) +
    scale_x_continuous(limits = c(mymapbounds$xmin, mymapbounds$xmax))
  
}

mycolours = RColorBrewer::brewer.pal(5,&amp;quot;Dark2&amp;quot;)

make_world = function(mydata){
  mydata  = centroidsdata
  afr = create_labelmap(mydata, &amp;quot;Africa&amp;quot;,   mycolour = mycolours[1])
  ame = create_labelmap(mydata, &amp;quot;Americas&amp;quot;, mycolour = mycolours[4])
  asi = create_labelmap(mydata, &amp;quot;Asia&amp;quot;,     mycolour = mycolours[2])
  eur = create_labelmap(mydata, &amp;quot;Europe&amp;quot;,   mycolour = mycolours[3])
  rus = create_labelmap(mydata, &amp;quot;Russia&amp;quot;,   mycolour = mycolours[3])
  oce = create_labelmap(mydata, &amp;quot;Oceania&amp;quot;,  mycolour = mycolours[5])

  
  (ame + (eur / afr) + (rus / asi / oce)) + plot_layout(ncol = 3)
}

plot2 = make_world(centroidsdata)

plot2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://riinu.me/post/2018-09-16-global-map-of-country-names-and-patchwork_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;2304&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This gives continents a much better shape, but it does severaly misplace Polynesia. See if you can find where, e.g., Tonga is and where it should be.&lt;/p&gt;
&lt;p&gt;To see what I did with patchwork there, let’s add black borders to each region (Code#2):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://riinu.me/post/2018-09-16-global-map-of-country-names-and-patchwork_files/figure-html/code2-1.png&#34; width=&#34;2304&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Code#1:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#devtools::install_github(&amp;quot;slowkow/ggrepel&amp;quot;)
#devtools::install_github(&amp;quot;thomasp85/patchwork&amp;quot;)


library(tidyverse)
library(ggrepel)
library(patchwork)

mydata  = data_frame(x = c(1, 1.3), y = c(1, 1), mylabel = c(&amp;quot;Point-1&amp;quot;, &amp;quot;Point-2&amp;quot;))

p = mydata %&amp;gt;% 
  ggplot(aes(x, y, label = mylabel, colour = mylabel)) +
  geom_point() +
  coord_cartesian(xlim = c(-3, 3), ylim = c(-3, 3)) +
  theme_bw() +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  scale_colour_viridis_d()

plot1 = p + geom_text() + ggtitle(&amp;quot;geom_text()&amp;quot;)

plot2 = p+ geom_text_repel() + ggtitle(&amp;quot;geom_text_repel()&amp;quot;)

plot1 + plot2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Code#2:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;create_labelmap = function(mydata, mycontinent, myforce = 1, mycolour = &amp;quot;black&amp;quot;){
  
  mymapbounds = mapbounds %&amp;gt;% 
    filter(region == mycontinent)
  
  mydata %&amp;gt;% 
    filter(region == mycontinent) %&amp;gt;% 
    ggplot(aes(x = lon, y = lat, label = country)) +
    geom_text_repel(segment.alpha = 0, force = myforce, colour = mycolour)   +
    theme_void() +
    theme(legend.position = &amp;quot;none&amp;quot;) +
    scale_y_continuous(limits = c(mymapbounds$ymin, mymapbounds$ymax)) +
    scale_x_continuous(limits = c(mymapbounds$xmin, mymapbounds$xmax)) +
    theme(panel.border = element_rect(colour = &amp;quot;black&amp;quot;, fill=NA, size=5))
  
}

plot3 = make_world(centroidsdata)

plot3&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Islay distilleries in 3 days</title>
      <link>https://riinu.me/2018/04/islay-distilleries-in-3-days/</link>
      <pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2018/04/islay-distilleries-in-3-days/</guid>
      <description>


&lt;p&gt;&lt;img src=&#34;img/islay/islay_collage.png&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;day-0-sunday-18-february-2018&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Day 0 (Sunday 18-February 2018)&lt;/h2&gt;
&lt;p&gt;Left Edinburgh at 8am for a 1pm ferry Kennacraig to Port Askaig (Islay). Edinburgh-Kennacraig should be a 3.5h drive (and it was), but we left early to allow for any delays on the road. Arrived on Islay at 3pm and our accommodation near Port Ellen (southern Islay, close to to Ardbeg, Lagavulin, Laphroiaig) was a 40 min drive from the port.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/islay/islay_map_logo_small.jpg&#34; width=&#34;400&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Map of Islay with all its lovely distilleries.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;day-1-monday-19-february-2018-ardbeg-lagavulin-laphroiaig&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Day 1 (Monday 19-February 2018): Ardbeg, Lagavulin, Laphroiaig&lt;/h2&gt;
&lt;p&gt;We hadn’t booked anything other than the ferry and accommodation. February is very low season so we were right to think that no other advance bookings were necessary.&lt;/p&gt;
&lt;p&gt;We had a lazy morning and drove to Laphroaig at about 11am. We asked which tours or tasting events were on that day and booked Einar onto the Layers of Laphroaig tasting at 3pm (as the driver, I was allowed to accompany him for free). We then drove to Lagavulin (just a few miles from Laphroaig) and booked us onto the tour at 1pm. We then drove to Ardbeg (another few miles) and had second breakfast at their cafe. Then drove back to Lagavulin for the tour, and then back to Laphroaig for the testing.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/islay/islay_ardbeg.jpg&#34; width=&#34;400&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Ardbeg’s epic cafe.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/islay/islay_lagavulin.jpg&#34; width=&#34;400&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Waiting for the tour to begin at Lagavulin’s homey tasting room.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/islay/islay_laphroaig.jpg&#34; width=&#34;400&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;In Laphroiaig’s tasting room: &lt;strong&gt;The Layers of Laphroiaig&lt;/strong&gt; introduced whiskies from different casks that make up their range of malts. These include ex-bourbon, virgin oak (I did not know Scotch could be matured in virgin casks - I thought it always had to be ex-something!), ex-sherry, ex-port. We were the only ones booked on this so it ended up being a private tasting.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;day-2-tuesday-20-febaruary-2018-kilchoman-bruichladdich&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Day 2 (Tuesday 20-Febaruary 2018): Kilchoman, Bruichladdich&lt;/h2&gt;
&lt;p&gt;Einar drove us to Kilchoman where I had a tasting of their 3 limited edition malts in the visitor centre. Kilchoman is a “farm-distillery” and they even grow some of their own barley. We bought a bottle of their “100% Islay” which is made from barley grown at the premises. Unfortunately, we completely forgot to take any pictures there. Must go back.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/islay/islay_driving.jpg&#34; width=&#34;400&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Driving on Islay.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We then went to Bruichladdich and booked me on the Warehouse Experience at 2pm. Simiarly to Laphroaig, the driver was allowed to accompany for free. We had lunch at Port Charlotte while waiting for the event.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/islay/islay_warehouse.jpg&#34; width=&#34;600&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Bruichladdich warehouse experience&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We then went by Bowmore (it was nearly 5pm) and asked about the different tours and experiences they have on the next day. Decided to do the “Bottle Your Own in the Vaults” first thing on Wednesday morning.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;day-3-wednesday-21-february-2018-bowmore-bunnahabhain-ardnahoe-caol-ila&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Day 3 (Wednesday 21-February 2018): Bowmore, Bunnahabhain, Ardnahoe, Caol Ila&lt;/h1&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/islay/islay_bowmore.jpg&#34; width=&#34;600&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Bottling a 17-year-old sherry cask beauty at Bowmore.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We then dropped by Bunnahabhain - no tours were running that but we were offered a few free tasters at the shop. On our way back from Bunnahabhain we took a picture at Ardanahoe (a new distillery that opens any day now).&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/islay/islay_bunh_ardnahoe.jpg&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Visiting Bunnahabhain and stopping at soon to be opened Ardnahoe.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The final distillery was Caol Ila where we went on the standard tour. The view in the stills room was just out of this world. They didn’t allow us to take pictures inside, so I took this from their website:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/islay/islay_caolila_website.png&#34; width=&#34;200&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Caol Ila stills with a view of the Isle of Jura. Picture from: &lt;a href=&#34;https://www.malts.com/en-row/distilleries/caol-ila/&#34; class=&#34;uri&#34;&gt;https://www.malts.com/en-row/distilleries/caol-ila/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/islay/islay_caolila.jpg&#34; width=&#34;400&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Me outside Caol Ila with Jura in the background&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;what-we-brought-back-with-us&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;What we brought back with us&lt;/h1&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/islay/islay_treasure.jpg&#34; width=&#34;600&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;In addition to whisky distilleries, we also visited a nano-brewery, and it turns out that The Botanist (a gin) is made at Bruichladdich.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Converting old Wordpress posts to Hugo</title>
      <link>https://riinu.me/2018/02/converting-old-wordpress-posts-to-hugo/</link>
      <pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2018/02/converting-old-wordpress-posts-to-hugo/</guid>
      <description>


&lt;p&gt;Between 2014-2018 I published 29 posts on riinudata.wordpress.com. Today I’m converting all of those to my new website powered by &lt;a href=&#34;https://riinu.netlify.com/2018/02/hello-world/&#34;&gt;blogdown-Hugo&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;step-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 1&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href=&#34;https://bookdown.org/yihui/blogdown/from-wordpress.html&#34;&gt;Migration: From Wordpress&lt;/a&gt; chapter of the &lt;strong&gt;blogdown&lt;/strong&gt; book.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 2&lt;/h2&gt;
&lt;p&gt;Get all your wordpress posts into one XML: WP Admin - Tools - Export.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-3&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 3&lt;/h2&gt;
&lt;p&gt;Install &lt;a href=&#34;https://github.com/thomasf/exitwp&#34;&gt;Exitwp&lt;/a&gt; and its dependencies (&lt;code&gt;pyyamp&lt;/code&gt;, &lt;code&gt;beautifulsoup4&lt;/code&gt;, &lt;code&gt;html2text&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/thomasf/exitwp.git
sudo easy_install pip
sudo pip install pyyaml
sudo pip install beautifulsoup4
sudo pip install html2text&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This worked on macOS&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; High Sierra - I already had &lt;code&gt;python&lt;/code&gt; installed.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-4&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 4&lt;/h2&gt;
&lt;p&gt;Working in the directory that &lt;code&gt;git clone&lt;/code&gt; created (&lt;code&gt;exitwp&lt;/code&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Put the Wordpress XML in the wordpress-xml directory.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;xmllint riinu_wordpress.xml&lt;/code&gt;, worked the first time for me and I didn’t get any errors (so not sure what the &lt;strong&gt;fix errors if there are&lt;/strong&gt; would entail).&lt;/li&gt;
&lt;li&gt;Back in the &lt;code&gt;exitwp&lt;/code&gt; folder, run &lt;code&gt;python exitwp.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;This created folders &lt;code&gt;build/jekyll/riinudata.wordpress.com/_posts&lt;/code&gt; and the content looked like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://riinu.me/img/exitwp.png&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Move all these into &lt;code&gt;exitwp/post&lt;/code&gt; folder.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;step-5&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 5&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Take a copy of &lt;a href=&#34;https://github.com/yihui/oldblog_xml/blob/master/convert.R&#34; class=&#34;uri&#34;&gt;https://github.com/yihui/oldblog_xml/blob/master/convert.R&lt;/a&gt; to clean these .markdown files up and ready for Hugo. I edited the first three lines, skipped the “Do not run if…” chunk as I’d already done that in &lt;strong&gt;Step 3&lt;/strong&gt;, edited the &lt;code&gt;authors = c()&lt;/code&gt;, did not run the very last chunk (&lt;code&gt;local({if (!dir.exist...})&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Move all of the files (now &lt;code&gt;.md&lt;/code&gt;) into &lt;code&gt;content/post&lt;/code&gt; of your blogdown repo. Build and voila!&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;further-modifications&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Further modifications&lt;/h2&gt;
&lt;p&gt;Looks like most of my posts were converted like a charm, with nicely formatted code blocks and images. But I few things I noticed that I think I have to fix:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub gists are now displayed as links, will make those into code blocks (or embed them using a &lt;a href=&#34;http://blog.cronally.com/embed-gists-with-hugo/&#34;&gt;Hugo shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Most images show up perfectly, but some have gotten stuck in a code block, e.g. showing up as &lt;code&gt;&amp;lt;img src=&#34;https://riinudata.files.wordpress.com/2016/04/rplot.png&#34; alt=&#34;Rplot&#34;/&amp;gt;&lt;/code&gt;. Will sort these&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Overall I feared a lot worse and am super happy with the conversion experience. Took exactly 3 h.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://riinu.me/img/hilde_knit.jpg&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;My name is Hildegard and I approve this message.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;I’m only 1.5 years late to discover that OS X has been rebranded as macOS: &lt;a href=&#34;https://www.wired.com/2016/06/apple-os-x-dead-long-live-macos/&#34; class=&#34;uri&#34;&gt;https://www.wired.com/2016/06/apple-os-x-dead-long-live-macos/&lt;/a&gt;&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hello world: blogdown loves Hugo</title>
      <link>https://riinu.me/2018/02/hello-world/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2018/02/hello-world/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2018/02/blogdown_hugo.png?w=736&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;we-are-live&#34;&gt;We are live!&lt;/h1&gt;
&lt;p&gt;I wrote my last blog post on Wordpress on 20-October 2017 and promised myself this was the last time. I&amp;rsquo;ve been blogging on Wordpress since 2014 and the more I used it the more painful it got! This is most likely caused by the fact that I have been thrifting further and further away from point-and-click interfaces anyway&amp;hellip;oh and discovering MARKDOWN.&lt;/p&gt;
&lt;h3 id=&#34;my-two-rules&#34;&gt;My two rules:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;text is written in Markdown (I use R Markdown/knitr/bookdown, e.g. see how easy it is to create a book: &lt;a href=&#34;https://surgicalinformatics.github.io/healthyr_book/&#34;&gt;&amp;ldquo;HealthyR: the eBook&amp;rdquo;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;data analysis ends up in a Shiny app (e.g., see &lt;a href=&#34;https://riinu.me/2017/10/20/your-first-shiny-app/&#34;&gt;&amp;ldquo;If it’s not worth putting in a Shiny app it’s not worth doing.&amp;quot;&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;so-i-finally-got-round-to-creating-a-blogdown-hugo-site&#34;&gt;So I finally got round to creating a blogdown-Hugo site:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; is a website generator that is code-based (no more dragging around those pesky Wordpress elements); &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;blogdown&lt;/a&gt; is an R package that will help you generate Hugo, Jekyll, or Hexo sites, especially if you will be including R Markdown in it.&lt;/p&gt;
&lt;h3 id=&#34;steps-on-12-february-2018&#34;&gt;Steps on 12-February 2018:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Created a new blogdown project on RStudio, set &lt;code&gt;kakawait/hugo-tranquilpeak-theme&lt;/code&gt; as the theme&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edited my name, email etc. information in the &lt;em&gt;config.toml&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Absolutely could not figure out how to change &lt;code&gt;coverImage = &amp;quot;cover.jpg&amp;quot;&lt;/code&gt;. Tried putting my cover image in &lt;code&gt;/static/img/&lt;/code&gt;, &lt;code&gt;/static/_images/&lt;/code&gt;, &lt;code&gt;source/assets/images&lt;/code&gt; and tried linking to these any way I could think of (e.g. with and without the first &lt;code&gt;/&lt;/code&gt;) but it just wasn&amp;rsquo;t happening. Ended up putting my picture in &lt;code&gt;/themes/hugo-tranquilpeak-theme/static/images/&lt;/code&gt; and blatantly naming it &lt;code&gt;cover.jpg&lt;/code&gt; (replacing the theme&amp;rsquo;s default photo). This worked.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pushed the whole project to &lt;a href=&#34;https://github.com/riinuots/hugo-tranquil-website&#34;&gt;https://github.com/riinuots/hugo-tranquil-website&lt;/a&gt; and then created a submobule in &lt;a href=&#34;https://github.com/riinuots/hugo-tranquil-website/tree/master/themes&#34;&gt;https://github.com/riinuots/hugo-tranquil-website/tree/master/themes&lt;/a&gt; so when the theme gets updated I can pull the new version. This is not essential. I need to figure out the cover image issue though.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up Netlify as in &lt;a href=&#34;https://bookdown.org/yihui/blogdown/netlify.html&#34;&gt;https://bookdown.org/yihui/blogdown/netlify.html&lt;/a&gt; which was superquick but then spent some time troubleshooting why my theme wasn&amp;rsquo;t displaying properly. Turns out that for this theme, it is essential to set the &lt;code&gt;baseURL = &amp;quot;https://riinu.netlify.com/&amp;quot;&lt;/code&gt; (in &lt;em&gt;config.toml&lt;/em&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Created this Hello World post which seemed to work fine at first. I then added an unquoted semicolon to the title, broke everything and spent 2 h trying to figure out what went wrong. These were the errors I was getting and that no-one else in the world (Google) seemed to have reported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;edits to the new post not happening, but the site isn&amp;rsquo;t broken either&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clean_site()&lt;/code&gt; errors with:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rmarkdown::clean_site() Error in file.exists(files) : invalid &#39;file&#39; argument&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;after spending 2h on Google/github/rstudio/rmarkdown, blogdown book, blogdown repo, Hugo documentation, I finally came across &lt;code&gt;hugo -v&lt;/code&gt; (v for verbose). Noticed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;yaml: line 1: mapping values are not allowed in this context&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(which I had indeed seen before at some point during these 2 hours). Anyway, seeing it for the second time clicked - markdown thinks I&amp;rsquo;m mapping something that shouldn&amp;rsquo;t be mapped (mapping usually means defining variables). My title was (second line of the markdown file, really) &lt;code&gt;title: Hello world: blogdown loves Hugo&lt;/code&gt;, but if using a semicolon you need quotes: &lt;code&gt;title: &amp;quot;Hello world: blogdown loves Hugo&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;still-better-than-wordpress&#34;&gt;Still better than Wordpress.&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2018/02/pandas.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next steps:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Set up Disqus (comments).&lt;/li&gt;
&lt;li&gt;Bring over old posts from &lt;a href=&#34;https://riinudata.wordpress.com&#34;&gt;https://riinudata.wordpress.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Write all the new posts ideas I&amp;rsquo;ve been gathering over the past 4 months.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Your first Shiny app</title>
      <link>https://riinu.me/2017/10/your-first-shiny-app/</link>
      <pubDate>Fri, 20 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2017/10/your-first-shiny-app/</guid>
      <description>&lt;h3 id=&#34;what-is-shiny&#34;&gt;What is Shiny?&lt;/h3&gt;
&lt;p&gt;Shiny is an R package (&lt;code&gt;install.packages(&amp;quot;shiny&amp;quot;)&lt;/code&gt;) for making your outputs interactive. Furthermore, Shiny creates web apps meaning your work can be shared online with people who don&amp;rsquo;t use R. In other words: with Shiny, R people can make websites without ever learning Javascript etc.&lt;/p&gt;
&lt;p&gt;I am completely obsessed with Shiny and these days I end up presenting most of my work in a Shiny app.&lt;/p&gt;
&lt;div class=&#34;alert info &#34;&gt;
  &lt;p&gt;If it&amp;rsquo;s not worth putting in a Shiny app it&amp;rsquo;s not worth doing.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;your-first-shiny-app&#34;&gt;Your first Shiny app&lt;/h3&gt;
&lt;p&gt;Getting started with Shiny is actually a lot easier than a lot of people make it out to be. So I created a very short (9 slides) presentation outlining my 5-step programme for your first Shiny app.&lt;/p&gt;
&lt;p&gt;This is the app: &lt;a href=&#34;https://riinu.shinyapps.io/shiny_testing/&#34;&gt;https://riinu.shinyapps.io/shiny_testing/&lt;/a&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;This is the presentation: &lt;a href=&#34;http://rpubs.com/riinu/shiny&#34;&gt;http://rpubs.com/riinu/shiny&lt;/a&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;And here are the steps (also included in the presentation):&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEP 0&lt;/strong&gt;: &lt;code&gt;install.packages(&amp;quot;shiny&amp;quot;)&lt;/code&gt;. Use RStudio.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEP 1&lt;/strong&gt;: Create a script called &lt;code&gt;app.R&lt;/code&gt; using this skeleton:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/riinuots/c6ec0691633df2929adc7de90bdbc792&#34;&gt;https://gist.github.com/riinuots/c6ec0691633df2929adc7de90bdbc792&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEP 2&lt;/strong&gt;: Copy your plot code into the renderPlot function.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEP 3&lt;/strong&gt;: Add a &lt;code&gt;sliderInput&lt;/code&gt; to your User Interface (&lt;code&gt;ui&lt;/code&gt;). A slider is just one of the many Shiny widgets you could be using: &lt;a href=&#34;https://shiny.rstudio.com/gallery/widget-gallery.html&#34;&gt;https://shiny.rstudio.com/gallery/widget-gallery.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEP 4&lt;/strong&gt;: Tell your Server you wish the &lt;code&gt;dplyr::filter()&lt;/code&gt; to use the value from the slider. All inputs from the User Interface (&lt;code&gt;ui&lt;/code&gt;) are stored in &lt;code&gt;input$variable_name&lt;/code&gt;: replace the &lt;code&gt;2007&lt;/code&gt; with &lt;code&gt;input$year&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEP 5 (optional)&lt;/strong&gt;: Add &lt;code&gt;animate = TRUE.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Press &lt;code&gt;Control+Shift+Enter&lt;/code&gt; or the &amp;ldquo;Run App&amp;rdquo; button. You now have a Shiny app running on your computer. To deploy it to the internet, e.g. like I&amp;rsquo;ve done in the link above, see &lt;a href=&#34;http://docs.rstudio.com/shinyapps.io/getting-started.html#deploying-applications&#34;&gt;this.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R: Replacing NAs in all factors with &#39;Missing&#39;</title>
      <link>https://riinu.me/2017/07/r-replacing-nas-in-all-factors-with-missing/</link>
      <pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2017/07/r-replacing-nas-in-all-factors-with-missing/</guid>
      <description>&lt;p&gt;With a simple combination of &lt;code&gt;mutate_if&lt;/code&gt; and &lt;code&gt;fct_explicit_na, &lt;/code&gt;you can replace all NAs in all factors with &amp;ldquo;Missing&amp;rdquo;:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/riinuots/e517c36b1feb480df981721a00e0e24a.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;code&gt;dplyr&lt;/code&gt; reference: &lt;a href=&#34;http://dplyr.tidyverse.org/reference&#34;&gt;http://dplyr.tidyverse.org/reference&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;forcats&lt;/code&gt; reference: &lt;a href=&#34;http://dplyr.tidyverse.org/reference&#34;&gt;http://dplyr.tidyverse.org/reference&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Handling your .bib file (LaTex bibliography)</title>
      <link>https://riinu.me/2017/06/handling-your-bib-file-latex-bibliography/</link>
      <pubDate>Sat, 17 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2017/06/handling-your-bib-file-latex-bibliography/</guid>
      <description>&lt;p&gt;To create a .bib file that only includes the citations you used in the manuscript:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bibexport -o extracted_file.bib manuscript.aux&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;There are a few issues with this though. The command &lt;a href=&#34;https://www.ctan.org/pkg/bibexport&#34;&gt;bibexport&lt;/a&gt; comes with the installation of TexLive, but my Windows computer (bless) does not cooperate (&amp;ldquo;bibexport is not recognised as an internal or external command&amp;hellip;&amp;quot;) . So I can only use it on my Mac (luv ya).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Get data from ggplot()</title>
      <link>https://riinu.me/2016/12/get-data-from-ggplot/</link>
      <pubDate>Tue, 06 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2016/12/get-data-from-ggplot/</guid>
      <description>&lt;p&gt;&lt;strong&gt;ggplot&lt;/strong&gt; includes built in and seamless functionality that summarises your data before plotting it. As shown in the example below, &lt;code&gt;ggplot_build()&lt;/code&gt; can be used to access the summarised dataset.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2016/12/summarised_barplot.png&#34; alt=&#34;summarised_barplot&#34;&gt;&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/riinuots/a6af08ac11f7b5ede69572a7559a704b.js&#34;&gt;&lt;/script&gt;

&lt;pre&gt;&lt;code&gt;fill         y count prop x PANEL group    ...
#D7301F 0.2147239    35    1 1     1     4 ...
#FC8D59 0.6871166    77    1 1     1     3 ...
#FDCC8A 0.9570552    44    1 1     1     2 ...
#FEF0D9 1.0000000     7    1 1     1     1 ...
#D7301F 0.1696429    38    1 2     1     8 ...
#FC8D59 0.6116071    99    1 2     1     7 ...
...
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>R lingua: library vs package</title>
      <link>https://riinu.me/2016/10/r-lingua-library-vs-package/</link>
      <pubDate>Mon, 10 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2016/10/r-lingua-library-vs-package/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2016/10/library_vs_package.jpg&#34; alt=&#34;library_vs_package&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Online syntax highlighter</title>
      <link>https://riinu.me/2016/09/online-syntax-highlighter/</link>
      <pubDate>Mon, 26 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2016/09/online-syntax-highlighter/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://markup.su/highlighter/&#34;&gt;http://markup.su/highlighter/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The style I use: Dawn&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R: ISO codes and country names</title>
      <link>https://riinu.me/2016/09/r-iso-codes-and-country-names/</link>
      <pubDate>Mon, 26 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2016/09/r-iso-codes-and-country-names/</guid>
      <description>&lt;p&gt;install.packages(&lt;!-- raw HTML omitted --&gt;&amp;lsquo;maps&amp;rsquo;&lt;!-- raw HTML omitted --&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;iso = maps::iso3166

&amp;gt; str(iso)
&#39;data.frame&#39;:   269 obs. of  5 variables:
 $ a2         : chr  &amp;quot;AW&amp;quot; ...
 $ a3         : chr  &amp;quot;ABW&amp;quot; ...
 $ ISOname    : chr  &amp;quot;Aruba&amp;quot; ..
 $ mapname    : chr  &amp;quot;Aruba&amp;quot; ...
 $ sovereignty: chr  &amp;quot;Netherlands&amp;quot; ...
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Adding a Cron job using the ed editor</title>
      <link>https://riinu.me/2016/07/adding-a-cron-job-using-the-ed-editor/</link>
      <pubDate>Mon, 25 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2016/07/adding-a-cron-job-using-the-ed-editor/</guid>
      <description>&lt;p&gt;These commands (after the first one) work in the ed editor. ed editor is used in the RStudio server shell.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo crontab -e                                     #opens crontab file in chosen editor

a                                                   #add to file
0,30 * * * * Rscript /home/user/folder/script.R     #command to add
.                                                   #finished editing
,p                                                  #print file content to check
w                                                   #save changes
Q                                                   #quit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example the script will run every 0 hours, 30 minutes, see &lt;a href=&#34;http://askubuntu.com/questions/2368/how-do-i-set-up-a-cron-job&#34;&gt;Ubuntu: How do I set up a CRON job&lt;/a&gt; for other options.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Add abcd labels on ggplot facets</title>
      <link>https://riinu.me/2016/04/add-abcd-labels-on-ggplot-facets/</link>
      <pubDate>Sun, 17 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2016/04/add-abcd-labels-on-ggplot-facets/</guid>
      <description>&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/riinuots/25817167cfd397cacecdf6f38b473392.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2016/04/rplot.png%22&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How long did my R script run?</title>
      <link>https://riinu.me/2016/04/how-long-did-my-script-run/</link>
      <pubDate>Fri, 15 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2016/04/how-long-did-my-script-run/</guid>
      <description>&lt;p&gt;This to the beginning:&lt;/p&gt;
&lt;p&gt;strt&amp;lt;-&lt;a href=&#34;http://inside-r.org/r-doc/base/Sys.time&#34;&gt;Sys.time&lt;/a&gt;()&lt;/p&gt;
&lt;p&gt;And this to the end:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/print&#34;&gt;print&lt;/a&gt;(&lt;a href=&#34;http://inside-r.org/r-doc/base/Sys.time&#34;&gt;Sys.time&lt;/a&gt;()-strt)&lt;/p&gt;
&lt;p&gt;Example output:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;print(Sys.time()-strt)
Time difference of 16.39691 secs&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Adding space between rows in LaTex tables</title>
      <link>https://riinu.me/2016/04/adding-space-between-rows-in-latex-tables/</link>
      <pubDate>Mon, 11 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2016/04/adding-space-between-rows-in-latex-tables/</guid>
      <description>&lt;p&gt;By default, LaTex tables are very tight:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\usepackage{booktabs}

\begin{table}[]
\centering
\caption{My caption}
\label{my-label}
\begin{tabular}{@{}lll@{}}
\toprule
Rows  &amp;amp; Column 1 &amp;amp; Column 2 \\ \midrule
Row 1 &amp;amp; 1234     &amp;amp; 2345     \\
Row 2 &amp;amp; 3456     &amp;amp; 4567     \\
Row 3 &amp;amp; 5678     &amp;amp; 6789     \\
Row 4 &amp;amp; 7890     &amp;amp; 8901     \\
Row 5 &amp;amp; 9012     &amp;amp; 10000    \\ \bottomrule
\end{tabular}
\end{table}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2016/04/screen-shot-2016-04-11-at-11-28-54.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Adding this to the document preamble will add space between the rows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\renewcommand{\arraystretch}{1.7}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2016/04/screen-shot-2016-04-11-at-11-24-26.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;And this command can be used to add space between rows manually:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\vspace{1cm}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2016/04/screen-shot-2016-04-11-at-11-25-38.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My minimal LaTex preamble</title>
      <link>https://riinu.me/2016/03/my-minimal-latex-preamble/</link>
      <pubDate>Wed, 23 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2016/03/my-minimal-latex-preamble/</guid>
      <description>&lt;p&gt;My minimal example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;\documentclass[a4paper]{article}

%%% FIGURES AND TABLES %%%%
\usepackage{graphicx} %gives the \includegraphics[width=0.5\textwidth]{my_image}

%%% PAGE AND TEXT SET-UP %%%%
\usepackage{fullpage} %gets rids of the wide default borders
\renewcommand{\baselinestretch}{1.5} %space between lines

\begin{document}

Hello hello hello

\end{document}

And then one that is not so minimal, but still pretty basic and useful:

\documentclass[a4paper]{article}

%%% FIGURES AND TABLES %%%%
\usepackage{graphicx} %gives the \includegraphics[width=0.5\textwidth]{my_image}
\usepackage{booktabs} %for nicer tables
\usepackage{tabu} %advanced control over tables

\renewcommand{\thetable}{S\arabic{table}} %if this is supplement (this numbers figures as S1, S2...), comment out if main
\renewcommand{\thefigure}{S\arabic{figure}} %if this is supplement, replace S with A if Appendix

%%% SPECIAL CHARACTERS %%%%
\usepackage{amsmath} % amsmath provides extra maths symbols
\newcommand{\degree}{\ensuremath{^\circ}} %for some reason I can not find a degree symbol from other packages or the packages I do find it from clash with some others
\usepackage{times} %these packages will make texttildelow look normal
\usepackage{textcomp}

%%% REFERENCES $$$
\usepackage{natbib} %references as citet (textual) or citep (parenthetical)

%%% PAGE AND TEXT SET-UP %%%%
\usepackage{fullpage} %gets rids of the wide default borders
\usepackage{caption}
\captionsetup[table]{skip=10pt} %this adds space between the table caption and the table itself
\renewcommand{\baselinestretch}{1.5} %space between lines

\begin{document}

Hello hello hello

\bibliographystyle{apalike}
\bibliography{mybibfile.bib}

\end{document}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>How to &#34;increase&#34; array resolution in R (replicate each element both column-wise and row-wise)</title>
      <link>https://riinu.me/2015/09/how-to-increase-array-resolution-in-r-replicate-each-element-both-column-wise-and-row-wise/</link>
      <pubDate>Sat, 12 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2015/09/how-to-increase-array-resolution-in-r-replicate-each-element-both-column-wise-and-row-wise/</guid>
      <description>&lt;p&gt;One picture says more than a thousand words. You have what is one the left, and you want what is on the right.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2015/09/resolution_cut.png&#34; alt=&#34;resolution_cut&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;my_matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;), nrow&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;#matrix is a 2D array, this next row creates a third dimension,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#duplicating the data&lt;/span&gt;
my_array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(my_matrix, dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There are a few different ways to do this, but by far the cleanest and quickest way is to just select the rows and columns multiple times, by replicating row and column numbers (instead of actually replicating each element):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#2D:
increased_matrix = my_matrix[rep(1:nrow(my_matrix), each=3), rep(1:ncol(my_matrix, each=3)]

#3D (same really, just one extra comma for the third dimension):
increased_array = my_array[rep(1:nrow(my_array), each=3), rep(1:ncol(my_array, each=3), ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that by default, in rep(something, n) the n is &lt;strong&gt;times&lt;/strong&gt; so equivalent to rep(something, times=n), but in this case we need to use &lt;strong&gt;each&lt;/strong&gt; instead of &lt;strong&gt;times&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cut a time period from netCDF with nco</title>
      <link>https://riinu.me/2015/06/cut-a-time-period-from-netcdf-with-nco/</link>
      <pubDate>Tue, 30 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2015/06/cut-a-time-period-from-netcdf-with-nco/</guid>
      <description>&lt;p&gt;&lt;code&gt;ncks -d time,start_time,end_time in.nc out.nc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;start_time&lt;/code&gt; and &lt;code&gt;end_time&lt;/code&gt; are integers.&lt;/p&gt;
&lt;p&gt;Add -F, if you want to use Fortran indexing (to start from 1).&lt;/p&gt;
&lt;p&gt;No space between dimension name and start-end points!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Converting R Markdown to Latex</title>
      <link>https://riinu.me/2015/06/converting-r-markdown-to-latex/</link>
      <pubDate>Wed, 24 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2015/06/converting-r-markdown-to-latex/</guid>
      <description>&lt;p&gt;Install Pandoc: &lt;a href=&#34;http://pandoc.org/&#34;&gt;http://pandoc.org/&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(knitr)

&lt;span style=&#34;color:#a6e22e&#34;&gt;knit&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;report.Rmd&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;#This creates &amp;#39;report.md&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Open the Terminal, Command Prompt (search for cmd) or Windows Powershell, go to the folder and do:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pandoc -s report.md -o report.tex&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And that&amp;rsquo;s it!&lt;/p&gt;
&lt;p&gt;(Read &lt;a href=&#34;http://proteo.me.uk/2013/06/generating-r-reports-with-vector-images-from-markdown-with-knitr/&#34;&gt;this&lt;/a&gt;, if you want vector images.)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reordering factor levels in R and what could go wrong</title>
      <link>https://riinu.me/2015/06/reordering-factor-levels-in-r-and-what-could-go-wrong/</link>
      <pubDate>Thu, 11 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2015/06/reordering-factor-levels-in-r-and-what-could-go-wrong/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently started using &lt;a href=&#34;http://docs.ggplot2.org/current/&#34;&gt;ggplot2&lt;/a&gt; in addition to lattice (see &lt;a href=&#34;https://riinudata.wordpress.com/2014/08/08/r-graphical-devices-plot-margins-and-legend-next-to-the-plot-not-on-it/&#34;&gt;this post&lt;/a&gt; that I made a while ago, explaining how I got into using lattice in the first place). Hint: when using ggplot2, you&amp;rsquo;ll need to use of the reshape2 package (also written by the amazing Hadley Wickham) to get your data into a form that ggplot2 works best with. Another thing that you&amp;rsquo;ll want to think about when using ggplo2 is factor levels. This post will show how to (and also how not to) rearrange factor levels in R.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s create a quick barplot with strings as x labels.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplot2)

&lt;span style=&#34;color:#75715e&#34;&gt;#create dummy data&lt;/span&gt;
a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;my&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;)
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;
df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(a, b)
df
&lt;span style=&#34;color:#a6e22e&#34;&gt;qplot&lt;/span&gt;(a, b, data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;df, geom&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;, stat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(axis.text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;element_text&lt;/span&gt;(size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;, angle&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2015/06/barplot1.png&#34; alt=&#34;barplot1&#34;&gt;&lt;/p&gt;
&lt;p&gt;As df$a is an array of strings, R sets the factor levels alphabetically: my 1, my 10, my 11, my 2&amp;hellip;which is not what we want, so let&amp;rsquo;s rearrange factor levels:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;a, levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;my&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;))
df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;a
&lt;span style=&#34;color:#a6e22e&#34;&gt;qplot&lt;/span&gt;(a, b, data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;df, geom&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;, stat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(axis.text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;element_text&lt;/span&gt;(size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;, angle&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2015/06/barplot2.png&#34; alt=&#34;barplot2&#34;&gt;&lt;/p&gt;
&lt;p&gt;And finally, the wrong way to rearrange factor levels would be by using the levels() function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(a, b)
&lt;span style=&#34;color:#a6e22e&#34;&gt;levels&lt;/span&gt;(df&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;a) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;my&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;qplot&lt;/span&gt;(a, b, data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;df, geom&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;, stat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(axis.text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;element_text&lt;/span&gt;(size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;, angle&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2015/06/barplot3.png&#34; alt=&#34;barplot3&#34;&gt;&lt;/p&gt;
&lt;p&gt;So be careful - if your data is not as obvious as this example and you are a bit new to factors and levels, you might end up plotting wrong results (like on the last example, &amp;ldquo;my 2&amp;rdquo; and &amp;ldquo;my 3&amp;rdquo; were plotted with the values 10 and 11).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Latex tables: column widths and alignments</title>
      <link>https://riinu.me/2014/11/latex-tables-column-widths-and-allignments/</link>
      <pubDate>Tue, 04 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2014/11/latex-tables-column-widths-and-allignments/</guid>
      <description>&lt;p&gt;Firstly, start off your table in &lt;a href=&#34;http://www.tablesgenerator.com/&#34;&gt;http://www.tablesgenerator.com/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tables Generator will do a lot for you. Its most useful features are importing from .csv and merging cells. The Booktabs table style (alternative to default table style from the menu) looks a bit nicer and is &amp;ldquo;publication quality&amp;rdquo;. Note that publication quality tables should not contain vertical lines.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://riinudata.files.wordpress.com/2014/09/tablesgenerator1.png&#34; alt=&#34;Screen shoti of Tables Generator&#34;&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2014/11/table-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;http://pastebin.com/FS2QLSDF&#34;&gt;Code #1&lt;/a&gt; is the code from Tables Generator with the addition of caption, label and Latex document begin-end (so it&amp;rsquo;s compilable). Continuing from that table, let&amp;rsquo;s centre the contents of columns 1-3 and the whole table in your document, by adding \centering and changing the &lt;a href=&#34;http://en.wikibooks.org/wiki/LaTeX/Tables#The_tabular_environment&#34;&gt;table specs&lt;/a&gt; from l&amp;rsquo;s to c&amp;rsquo;s: &lt;a href=&#34;http://pastebin.com/bxLpsydd&#34;&gt;Code #2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2014/11/table-21.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Finally, if your cell contents are long and need wrapping:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2014/11/table-3.png&#34; alt=&#34;table 3&#34;&gt;&lt;/p&gt;
&lt;p&gt;Note that if your table is too wide for your document margins, then LaTex issues a warning, not an error. So you need check for warnings like &lt;em&gt;&amp;ldquo;Overfull \hbox (9.75735pt too wide) in paragraph at lines 55&amp;ndash;63&amp;rdquo;&lt;/em&gt; in your compilation log. A quick solution to wide cells is &lt;a href=&#34;http://stackoverflow.com/questions/790932/how-to-wrap-text-in-latex-tables&#34;&gt;like this&lt;/a&gt; (&lt;a href=&#34;http://pastebin.com/GMXj4dap&#34;&gt;Code#4&lt;/a&gt;):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2014/11/table-4.png&#34; alt=&#34;Code#4&#34;&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;But this solution does not include decent central alignment. Using m (so m{2cm} instead of p{2cm}) would do the vertical centering (&lt;em&gt;e.g.&lt;/em&gt; look how the first row is alligned), but still not horizontal. So following &lt;a href=&#34;http://tex.stackexchange.com/questions/12703/how-to-create-fixed-width-table-columns-with-text-raggedright-centered-raggedlef&#34;&gt;this &lt;/a&gt;StackOverflow post, I started defining column types and widths using the array package. See &lt;a href=&#34;http://pastebin.com/EWsvVfqH&#34;&gt;Code#5&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://riinudata.files.wordpress.com/2014/11/table-5.png&#34; alt=&#34;Code#5&#34;&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Next time I might write a post on how to add extra space between lines.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why does a linear model without an intercept (forced through the origin) have a higher R-squared value? [calculated by R]</title>
      <link>https://riinu.me/2014/08/why-does-linear-model-without-an-intercept-forced-through-the-origin-have-a-higher-r-squared-value-calculated-by-r/</link>
      <pubDate>Wed, 06 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2014/08/why-does-linear-model-without-an-intercept-forced-through-the-origin-have-a-higher-r-squared-value-calculated-by-r/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is a short note based on &lt;a href=&#34;http://stats.stackexchange.com/questions/26176/removal-of-statistically-significant-intercept-term-boosts-r2-in-linear-model/26205#26205&#34;&gt;this&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Answer in short: Because different formulas are used to calculate the R-squared of a linear regression, depending on whether it has an intercept or not.&lt;/p&gt;
&lt;p&gt;R2 for a linear model that has an intercept:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://riinudata.files.wordpress.com/2014/08/codecogseqn.png&#34; alt=&#34;CodeCogsEqn&#34;&gt;,&lt;/p&gt;
&lt;p&gt;where &lt;em&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/em&gt; is the variable that the linear model is trying to predict (the response variable), &lt;em&gt;y^&lt;/em&gt; is the predicted value and &lt;em&gt;y-&lt;/em&gt; is the mean value of the response variable.&lt;/p&gt;
&lt;p&gt;And the R2 for a linear model that is forced through the origin:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://riinudata.files.wordpress.com/2014/08/codecogseqn-2.png&#34; alt=&#34;CodeCogsEqn (2)&#34;&gt;,&lt;/p&gt;
&lt;p&gt;basically the mean value of the response variable is removed from the equation, making the denominator bigger (and the result of the division smaller). The reason why the  mean can not be used for this calculation is that it does not make sense any more - forcing the fit through zero kind of means adding an infinite number of (0,0) points into the dataset.&lt;/p&gt;
&lt;p&gt;This means that the R-squared values of two different linear models (one with an intercept, one without) can not really be compared, because when the intercept is quite small compared to the residuals (basically the numerator) then the R2 &amp;ldquo;advantange&amp;rdquo; that the through-origin regression gets is relatively bigger than the decrease in residuals, when including the intercept.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rotate with ImageMagick</title>
      <link>https://riinu.me/2014/07/rotate-with-imagemagick/</link>
      <pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2014/07/rotate-with-imagemagick/</guid>
      <description>&lt;p&gt;&lt;code&gt;convert -rotate 270 -density 300 -compress lzw in.pdf out.pdf&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to temporarily disable a bash alias</title>
      <link>https://riinu.me/2014/07/how-to-temporarily-disable-a-bash-alias/</link>
      <pubDate>Tue, 22 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2014/07/how-to-temporarily-disable-a-bash-alias/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;ve defined &lt;code&gt;alias ls=&#39;ls -al –color=auto&#39;&lt;/code&gt;, but want to use ls without the extra information and colouring then use&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\ls&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;or equivalently&lt;/p&gt;
&lt;p&gt;&lt;code&gt;command ls&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Symbolic links and 2 common errors with them</title>
      <link>https://riinu.me/2014/07/symbolic-links-and-2-common-errors-with-them/</link>
      <pubDate>Tue, 22 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2014/07/symbolic-links-and-2-common-errors-with-them/</guid>
      <description>&lt;p&gt;I don&amp;rsquo;t know if it&amp;rsquo;s good or bad, but I like when the files I&amp;rsquo;m working with are in the working directory (so instead of using pathnames to my files I can just type filename or ./filename). But to avoid copying data and wasting space, symbolic links are the way to go. The command for that is:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ln -s target_file sym_link&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;where -s stands for &amp;ldquo;symbolic&amp;rdquo; (just ln would create a hard link)&lt;/p&gt;
&lt;p&gt;However, if you are not a complete UNIX guru, then trying to access your linked files is likely to produce one of these errors:&lt;/p&gt;
&lt;p&gt;No such file or directory OR Too many levels of symbolic links&lt;/p&gt;
&lt;p&gt;The solution to both of these is to &lt;strong&gt;always use full paths&lt;/strong&gt; to the files and their symbolic links (&lt;code&gt;ln -s /home/folder/file.txt /home/folder2/file.txt&lt;/code&gt;). For further information, see &lt;a href=&#34;http://superuser.com/questions/322319/when-creating-a-symbolic-link-how-do-i-troubleshoot-too-many-levels-of-symboli&#34;&gt;this&lt;/a&gt; and &lt;a href=&#34;http://www.unix.com/unix-for-dummies-questions-and-answers/11324-too-many-levels-symbolic-links.html&#34;&gt;this&lt;/a&gt;. Apparently you can have 32 levels of symbolic links, so getting a &amp;ldquo;Too many levels of symbolic links&amp;rdquo; after just creating one, means that there is some serious recursion going on.&lt;/p&gt;
&lt;p&gt;Remove symbolic links just as you remove files:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rm sym_link&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Add up two variables of a netCDF file</title>
      <link>https://riinu.me/2014/05/add-up-the-values-of-two-variables-of-a-netcdf-file/</link>
      <pubDate>Thu, 29 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2014/05/add-up-the-values-of-two-variables-of-a-netcdf-file/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://nco.sourceforge.net/nco.html#ncap2-netCDF-Arithmetic-Processor&#34;&gt;NCO:ncap2&lt;/a&gt; is the function to do it:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ncap2 -s &#39;new_var=var1+var2&#39; in_filename.nc out_filename.nc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The output file will have all of the variables that exist in the input file as well as the new_var. Add -O if your input and output files are the same (overwrite).&lt;/p&gt;
&lt;p&gt;I do not know what the -s stands for.&lt;/p&gt;
&lt;p&gt;BUT the new_var will have the same long_name as the first variable used for summing (i.e. it could make some things a bit confusing). To change it, use a very complicated (but allegedly also very powerful) &lt;a href=&#34;http://nco.sourceforge.net/nco.html#ncatted-netCDF-Attribute-Editor&#34;&gt;NCO:ncatted&lt;/a&gt;. Fortunately, its documentation has just the right example:&lt;/p&gt;
&lt;p&gt;Change the value of the &lt;code&gt;long_name&lt;/code&gt; attribute for variable &lt;code&gt;T&lt;/code&gt; from whatever it currently is to &amp;ldquo;temperature&amp;rdquo;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ncatted -a long_name,T,o,c,temperature in.nc&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My bash aliases</title>
      <link>https://riinu.me/2014/05/my-bash-aliases/</link>
      <pubDate>Thu, 29 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2014/05/my-bash-aliases/</guid>
      <description>&lt;p&gt;If you find yourself using some commands always with the same flags, then it would make sense to define them as alieses, by putting them into your .bashrc file like this (log out and back in for it to take effect):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# .bashrc

# Put user specific aliases and functions here
alias ls=&#39;ls -al --color=auto&#39;
alias qstat=&#39;qstat -a&#39;
alias qsub=&#39;qsub -m abe -M myemail@email.com&#39;

alias disk=&amp;quot;du * -sh | sort -h&amp;quot;

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;-a for ls shows hidden files (files that start with a dot, like .bashrc) and -l displays more information than just the file/folder names (permissions for example).&lt;/p&gt;
&lt;p&gt;_&amp;ndash;color=auto _colours folders, executables and symbolic links.&lt;/p&gt;
&lt;p&gt;-a for qstat displays more information.&lt;/p&gt;
&lt;p&gt;Both -m and -M for qsub mean messages. For -m:&lt;/p&gt;
&lt;p&gt;b - Mail is sent at the beginning of the job.&lt;/p&gt;
&lt;p&gt;e - Mail is sent at the end of the job.&lt;/p&gt;
&lt;p&gt;a - Mail is sent when the job is aborted or rescheduled.&lt;/p&gt;
&lt;p&gt;And -M is the flag before the email address(es).&lt;/p&gt;
&lt;p&gt;The last one (I call it disk) displays the sizes of one level of subfolders and orders them too (correct ordering is done by the really cool -h option, as apposed to the numeric sort -n, which would think that 1.4GB&amp;gt;1.4TB).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Saving some variables from a netCDF to a new file</title>
      <link>https://riinu.me/2014/05/saving-some-variables-from-a-netcdf-to-a-new-file/</link>
      <pubDate>Thu, 29 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2014/05/saving-some-variables-from-a-netcdf-to-a-new-file/</guid>
      <description>&lt;p&gt;The NCO (&lt;a href=&#34;http://nco.sourceforge.net/&#34;&gt;&lt;strong&gt;n&lt;/strong&gt;et&lt;strong&gt;C&lt;/strong&gt;DF &lt;strong&gt;O&lt;/strong&gt;perator&lt;/a&gt;) command ncks (&lt;a href=&#34;http://nco.sourceforge.net/nco.html#ncks-netCDF-Kitchen-Sink&#34;&gt;netCDF Kitchen Sink&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;From the &lt;a href=&#34;http://nco.sourceforge.net/nco.html#ncks-netCDF-Kitchen-Sink&#34;&gt;documentation&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The nickname &amp;ldquo;kitchen sink&amp;rdquo; is a catch-all because &lt;code&gt;ncks&lt;/code&gt; combines most features of &lt;code&gt;ncdump&lt;/code&gt; and &lt;code&gt;nccopy&lt;/code&gt; with extra features to extract, hyperslab, multi-slab, sub-set, and translate into one versatile utility. &lt;code&gt;ncks&lt;/code&gt; extracts (a subset of the) data from input-file and and writes (or pastes) it in netCDF format to output-file, and optionally writes it in flat binary format to binary-file, and optionally prints it to screen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;/&amp;hellip;/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;ncks&lt;/code&gt; extracts (and optionally creates a new netCDF file comprised of) only selected variables from the input file (similar to the old &lt;code&gt;ncextr&lt;/code&gt; specification). Only variables and coordinates may be specifically included or excluded—all global attributes and any attribute associated with an extracted variable are copied to the screen and/or output netCDF file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The flag for extracting variables is -v (followed by variable name(s) separated by commas):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ncks -v var1,var2 in.nc out.nc&lt;/code&gt;         no space after the comma!&lt;/p&gt;
&lt;p&gt;In case you&amp;rsquo;ve forgotten what the names of your variables are, do:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ncdump -h in__filename_.nc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;-h prints headers only (and not the values). I usually direct the output of ncdump to a text file:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ncdump -h in__filename_.nc &amp;gt; ncdump.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Also, if you forgot some of the variables that you wanted then you don&amp;rsquo;t have to do the whole list again - NCO is always willing to append variables. So if you run:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ncks -v var3 in.nc out.nc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;but the out.nc already exists, then NCO will prompt you with this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ncks: out.nc exists&amp;mdash;&lt;code&gt;e&#39;xit, &lt;/code&gt;o&amp;rsquo;verwrite (i.e., delete existing file), or `a&amp;rsquo;ppend (i.e., replace duplicate variables in and add new variables to existing file) (e/o/a)?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So you can enter a and hit &amp;lsquo;return&amp;rsquo;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sum all values over several dimensions of a netCDF variable</title>
      <link>https://riinu.me/2014/05/sum-all-values-over-several-dimensions-of-a-netcdf-variable/</link>
      <pubDate>Thu, 29 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://riinu.me/2014/05/sum-all-values-over-several-dimensions-of-a-netcdf-variable/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://nco.sourceforge.net/nco.html#ncap2-netCDF-Arithmetic-Processor&#34;&gt;NCO:ncap2&lt;/a&gt; and .total&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ncap2 -s &#39;summed_variable=variable_to_sum.total($lat,$lon)&#39; in.nc out.nc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://sourceforge.net/p/nco/discussion/9830/thread/e15cbda8&#34;&gt;Make sure to use single quotes.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If your in.nc==out.cnc then adding -A will save you from having to specify &amp;ldquo;overwrite&amp;rdquo; (&lt;a href=&#34;https://riinudata.wordpress.com/2014/05/29/nconcap2-and-append/&#34;&gt;see this&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ncap2 -A -s &#39;summed_variable=variable_to_sum.total($lat,$lon)&#39; in.nc out.nc&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>